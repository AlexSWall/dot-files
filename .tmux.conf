# == Tmux Configuration File ==

	# ----------------------------------------------------------------- #
	#        Terminal Commands, Key Bindings, and Tmux Commands         #
	# ----------------------------------------------------------------- #

	# === Terminal Commands ===

	#   Create a new, named tmux session:
	#      $ tmux new -s <Name>

	#   List sessions:
	#      $ tmux ls

	#   Attach to a session:
	#      $ tmux attach-session -t <Name/Id>

	#   Attach if the session exists, else create a new session:
	#      $ tmux new-session -A -s <Name>

	#   Kill a session:
	#      $ tmux kill-session -t <Name>


	# === Built-in Key Bindings ===

	#   Prefix s                List sessions
	#   Prefix $                Rename session
	#   Prefix d                Detach from session

	#   Prefix c                Create window
	#   Prefix w                List windows
	#   Prefix n                Next window
	#   Prefix p                Previous window
	#   Prefix f                Find window
	#   Prefix ,                Name window
	#   Prefix &                Kill window

	#   Prefix z                Toggle zoom
	#   Prefix ~                Display messages

	#   Prefix }                Paste tmux buffer
	#   Prefix =                View tmux buffer

	#   Prefix Meta-[Array_Key] Resize panes by 5


	# === Built-in Commands ===

	#   Swap panes Num1 and Num2 (identified with 'Prefix q'):
	#      :swap-pane -s <Num> -t <Num>


	# === Custom Key Bindings ===

	#   Prefix r                Reload config

	#   Prefix [|-]             Split panes
	#   Meta-[|-]               Split panes

	#   Prefix x                Kill window
	#   Meta-[qx]               Kill pane or window

	#   Ctrl-[hjkl\]            Switch panes with awareness of vim splits
	#   Meta-[hkl;]             Switch panes without considering vim splits
	#   Meta-[Arrow_Key]        Switch panes without considering vim splits
	#   Prefix [Array_Key]      Switch panes without considering vim splits

	#   Prefix [HJKL]           Resize panes by 10
	#   Prefix Ctrl-[Array_Key] Resize panes by 1, repeatable

	#   Prefix [!@"]            Hide (break) and unhide (join) panes
	#   Prefix [<>]             Swap panes
	#   Meta-[<>]               Swap panes

	#   Ctrl-p                  Move clipboard into tmux paste buffer
	#   Ctrl-y                  Move tmux copy buffer into clipboard


	# === Configuration Notes ===

	# set       An alias of 'set-option'
	# setw      An alias of 'set-window-option'

	# set -g    Set global options
	# set -a    Append to the settings, e.g. 'set -g status-style "bg=red"; set -ag status-style "fg=blue"'

	# bind      Alias for 'bind-key'
	#      -n   No prefix
	# -----------------------------------------------------------------


# - Core Functionality
# - General Utility
# - Key Bindings
# - Visuals
# - Status Bar
# - Plugins


# Reset all key-bindings; custom key-bindings would otherwise not be removed on
# reloading the config
unbind-key -a
source-file ~/.tmux.reset.conf


# == Core Functionality ==

# Set /bin/zsh as the startup shell. (Makes Tmux windows non-login shells?)
set -g default-command "/bin/zsh"

# Change the prefix to Ctrl-a
unbind C-b
set -g prefix C-a
bind C-b send-prefix  # Make Prefix:Ctrl-b send a prefix to a remote session
bind a   send-prefix  # Make Prefix:a      send a prefix to a remote session

# Enable using the mouse for selecting a pane, dragging a pane's borders, scrolling, etc.
set -g mouse on

# Tab titles
set-option -g set-titles on
set-option -g set-titles-string "#S: #W"


# == General Utility ==

# Allow moving around the command line (with 'Prefix :' or else) with vim key bindings after Esc. (Use Ctrl-C to exit.)
set -g status-keys vi

# Allow navigating a buffer in a window with vim key bindings.
setw -g mode-keys vi

# Visual update when a window has updated.
setw -g monitor-activity on

# Disallow automatic changing of window titles.
setw -g automatic-rename off
set -g allow-rename off

# Set the maximum number of lines to store for scrollback history.
set -g history-limit 10000

# No delay for escape key press
set -sg escape-time 0

# Increase the display time of messages on the tmux command line.
set -g display-time 4000

# Increase the display time of pane id indicators.
set -g display-panes-time 4000

# Ensure 256 colour mode works.
#
# If this gives issues, we need to create a tmux-256color terminfo entry, which
# we can compile on Mac as follows:
#   $ brew install ncurses
#   $ mkdir ~/.terminfo; cd ~/.terminfo
#   $ /usr/local/opt/ncurses/bin/infocmp tmux-256color > tmux-256color.info
#   $ tic -xe tmux-256color tmux-256color.info
# This creates ~/.terminfo/74/tmux-256color
# The usual entries can be found in /usr/share/terminfo/
#
# On Linux, we may need to run:
#   $ cat <<EOF|tic -x -
#   tmux|tmux terminal multiplexer,
#           ritm=\E[23m, rmso=\E[27m, sitm=\E[3m, smso=\E[7m, Ms@,
#           use=xterm+tmux, use=screen,
#
#   tmux-256color|tmux with 256 colors,
#           use=xterm+256setaf, use=tmux
#   EOF
set -s default-terminal "tmux-256color"
set -sa terminal-overrides ',xterm-256color:Tc'

# Start windows and pane indexes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# ...and renumber them when one is deleted.
set-option -g renumber-windows on

# Focus events for some plugins
set -g focus-events on


# === Bindings ===

# Reload tmux config file with Prefix r
bind r source-file ~/.tmux.conf

# -----

# Make F12 toggle between sending tmux commands to local and remote.
# https://bit.ly/2yPzSTu

bind -T root F12 \
  set prefix None \; \
  set key-table off \; \
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \; \
  refresh-client -S \; \

bind -T off F12 \
  set -u prefix \; \
  set -u key-table \; \
  refresh-client -S

# Tmux Buffers <--> System Buffers
# -- MacOS (pbcopy/pbpaste)
bind C-p run "pbpaste | tmux load-buffer - ; tmux paste-buffer"
bind C-y run "tmux save-buffer - | pbcopy"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel pbcopy
# -- Linux (xclip)
#bind C-p run "xclip | tmux load-buffer - ; tmux paste-buffer"
#bind C-y run "tmux save-buffer - | xclip -i"
#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i"
# -- WSL (clip.exe)
#bind C-p run "clip.exe | tmux load-buffer -"
#bind C-y run "tmux save-buffer - | clip.exe"
#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel clip.exe

# Split panes using | and -
bind | split-window -h       # (prefix |)
bind - split-window -v       # (prefix -)
bind -n M-| split-window -h  # (alt |)
bind -n M-- split-window -v  # (alt -)
unbind '"'
unbind %

# Kill pane with alt-W
bind -n M-W kill-pane

# Copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Update the working directory to the current directory
bind -n M-u attach-session -t . -c '#{pane_current_path}'

# -- Navigation --

# quick pane cycling
unbind C-A
bind C-A select-pane -t :.+

# - Alt-arrow (panes),
# - Prefix-[hjkl] (panes),
# - Ctrl-[hjkl] (panes),
# - Alt-[1-9] (windows)

# switch panes using Alt-arrow without prefix
bind -n M-Left  select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up    select-pane -U
bind -n M-Down  select-pane -D

# switch panes using {hjkl} (with prefix)
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

# switch panes using Ctrl-{hjkl} without prefix
bind -n C-h select-pane -L
bind -n C-l select-pane -R
bind -n C-k select-pane -U
bind -n C-j select-pane -D

# Select tmux window with meta-number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# ---------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
# ---------------------

# == Visuals ==

# Colours: https://i.stack.imgur.com/e63et.png
# colour232 = black; colour255 = white

# -- General --

setw -g monitor-activity off  # Don't monitor the activity of windows

setw -g mode-style 'fg=colour255 bg=colour238'

# Set Tmux windows background colour to same as vim
set -g window-style 'bg=colour232'

# -- Panes --
set -g pane-border-style 'fg=colour237 bg=colour232'
set -g pane-active-border-style 'fg=colour14 bg=colour232'


# == Status Bar ==

# -- General --
set -g status-interval 1  # Update once a second
set -g status-style 'fg=colour255 bg=colour232' # For the otherwise-unassigned sections of the bar

set -g window-status-bell-style 'fg=colour255 bg=colour1 bold'  # Set status line style for windows with a bell alert
set -g message-style 'fg=colour250 bg=colour233 bold'  # Set status line message style



# -- Positioning --
set -g status-position bottom  # Put the status bar on the bottom (as opposed to top)
set -g status-justify left  # Position of the window list component of the status line (vs centre or right)

# -- Status-Left --
set -g status-left ''
set -g status-left-style ''
set -g status-left-length 20

# -- Window-Status-Styles (centre-left) --
# General (non-current)
set -g window-status-style 'bg=colour233'
set -g window-status-format ' #[fg=colour209]#I#[fg=colour251]:#W#[fg=colour244]#F '

# Current
set -g window-status-current-style 'bg=colour234'
set -g window-status-current-format ' #[fg=colour14]#I#[fg=colour253]:#W#[fg=colour14]#F '

# -- Status-Right --
keys_off_text="#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF ')"

set -g @prefix_highlight_fg 'colour75'
set -g @prefix_highlight_bg 'colour232'
set -g status-right-style 'fg=colour75'
set -g status-right "#{prefix_highlight}$keys_off_text#{simple_git_status}#(whoami)@#H  %d/%m %H:%M:%S "
set -g status-right-length 100

# set -g status-right '#{prefix_highlight}%H:%M:%S'
# set -g status-right-length 13


# == Plugins ==

set -g @plugin 'tmux-plugins/tpm' # TPM: prefix-{I,U,alt-u} to {install,update,uninstall}

# -- Restoring --

set -g @plugin 'tmux-plugins/tmux-resurrect'  # Prefix Ctrl-{s(ave),r(estore)}
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'

# -- Copy mode --

# Mac-specific:
# set -g default-command "reattach-to-user-namespace -l bash"  # Fix Mac-Tmux pbcopy/pbpaste

set -g @plugin 'tmux-plugins/tmux-copycat'  # Prefix, Ctrl-{f(ile),u(rl)}, n/N to navigate

set -g @plugin 'tmux-plugins/tmux-yank'  # Copy-mode: y=clipboard, Y=CLI; Normal: Prefix-y: CLI -> pbcopy

set -g @plugin 'tmux-plugins/tmux-open'  # Copy-mode: o=open, Ctrl-o=$EDITOR, S=search

# -- Interfaces --

# set -g @plugin 'AlexSWall/tmux-spotify-panel'  # Spotify panel: Meta-s

# -- Visuals --

# Status-bar
set -g @plugin 'kristijanhusak/tmux-simple-git-status'  # gives #{simple_git_status}
# set -g @plugin 'AlexSWall/tmux-spotify-status-tags'  # gives #{spotify_{status,artist,album,track}}
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'  # gives #{prefix_highlight}

# -- Finalisation --

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

if-shell 'test -n "$SSH_CLIENT"' 'source-file ~/.tmux.remote.conf'
